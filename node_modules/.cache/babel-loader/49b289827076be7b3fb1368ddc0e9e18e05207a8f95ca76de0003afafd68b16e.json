{"ast":null,"code":"var _jsxFileName = \"/Users/steffen/projects/geoguess/src/components/Quiz.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { asianCountries } from '../data/countries';\nimport './Quiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const [currentCountry, setCurrentCountry] = useState(null);\n  const [options, setOptions] = useState([]);\n  const [score, setScore] = useState(0);\n  const [totalQuestions, setTotalQuestions] = useState(0);\n  const [feedback, setFeedback] = useState('');\n  const [gameOver, setGameOver] = useState(false);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const getRandomCountry = () => {\n    const randomIndex = Math.floor(Math.random() * asianCountries.length);\n    return asianCountries[randomIndex];\n  };\n  const getRandomCapitals = (correctCapital, count) => {\n    const allCapitals = asianCountries.map(country => country.capital);\n    const otherCapitals = allCapitals.filter(capital => capital !== correctCapital);\n    const shuffled = otherCapitals.sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, count);\n  };\n  const generateOptions = correctCapital => {\n    const wrongOptions = getRandomCapitals(correctCapital, 3);\n    const allOptions = [...wrongOptions, correctCapital];\n    return allOptions.sort(() => 0.5 - Math.random());\n  };\n  const startNewQuestion = () => {\n    const newCountry = getRandomCountry();\n    setCurrentCountry(newCountry);\n    setOptions(generateOptions(newCountry.capital));\n    setSelectedAnswer(null);\n    setFeedback('');\n  };\n  const handleAnswer = selectedCapital => {\n    if (!currentCountry || selectedAnswer !== null) return;\n    setSelectedAnswer(selectedCapital);\n    const isCorrect = selectedCapital === currentCountry.capital;\n    setFeedback(isCorrect ? 'Correct! ðŸŽ‰' : `Wrong! The capital is ${currentCountry.capital}`);\n    if (isCorrect) {\n      setScore(prev => prev + 1);\n    }\n    setTotalQuestions(prev => prev + 1);\n    if (totalQuestions + 1 >= 10) {\n      setTimeout(() => setGameOver(true), 1500);\n    } else {\n      setTimeout(startNewQuestion, 1500);\n    }\n  };\n  const resetGame = () => {\n    setScore(0);\n    setTotalQuestions(0);\n    setGameOver(false);\n    startNewQuestion();\n  };\n  useEffect(() => {\n    startNewQuestion();\n  }, []);\n  if (gameOver) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your final score: \", score, \" out of \", totalQuestions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        className: \"reset-button\",\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Asian Capitals Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-display\",\n      children: [\"Score: \", score, \" / \", totalQuestions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), currentCountry && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"What is the capital of \", currentCountry.name, \"?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-container\",\n        children: options.map((capital, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswer(capital),\n          className: `option-button ${selectedAnswer === capital ? capital === currentCountry.capital ? 'correct' : 'incorrect' : ''}`,\n          disabled: selectedAnswer !== null,\n          children: capital\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), feedback && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `feedback ${feedback.includes('Correct') ? 'correct' : 'incorrect'}`,\n        children: feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"dalSAU7OQtZ8IuQBoxPLk5kL8xE=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","asianCountries","jsxDEV","_jsxDEV","Quiz","_s","currentCountry","setCurrentCountry","options","setOptions","score","setScore","totalQuestions","setTotalQuestions","feedback","setFeedback","gameOver","setGameOver","selectedAnswer","setSelectedAnswer","getRandomCountry","randomIndex","Math","floor","random","length","getRandomCapitals","correctCapital","count","allCapitals","map","country","capital","otherCapitals","filter","shuffled","sort","slice","generateOptions","wrongOptions","allOptions","startNewQuestion","newCountry","handleAnswer","selectedCapital","isCorrect","prev","setTimeout","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","index","disabled","includes","_c","$RefreshReg$"],"sources":["/Users/steffen/projects/geoguess/src/components/Quiz.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Country, asianCountries } from '../data/countries';\nimport './Quiz.css';\n\nconst Quiz: React.FC = () => {\n  const [currentCountry, setCurrentCountry] = useState<Country | null>(null);\n  const [options, setOptions] = useState<string[]>([]);\n  const [score, setScore] = useState(0);\n  const [totalQuestions, setTotalQuestions] = useState(0);\n  const [feedback, setFeedback] = useState('');\n  const [gameOver, setGameOver] = useState(false);\n  const [selectedAnswer, setSelectedAnswer] = useState<string | null>(null);\n\n  const getRandomCountry = () => {\n    const randomIndex = Math.floor(Math.random() * asianCountries.length);\n    return asianCountries[randomIndex];\n  };\n\n  const getRandomCapitals = (correctCapital: string, count: number): string[] => {\n    const allCapitals = asianCountries.map(country => country.capital);\n    const otherCapitals = allCapitals.filter(capital => capital !== correctCapital);\n    const shuffled = otherCapitals.sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, count);\n  };\n\n  const generateOptions = (correctCapital: string) => {\n    const wrongOptions = getRandomCapitals(correctCapital, 3);\n    const allOptions = [...wrongOptions, correctCapital];\n    return allOptions.sort(() => 0.5 - Math.random());\n  };\n\n  const startNewQuestion = () => {\n    const newCountry = getRandomCountry();\n    setCurrentCountry(newCountry);\n    setOptions(generateOptions(newCountry.capital));\n    setSelectedAnswer(null);\n    setFeedback('');\n  };\n\n  const handleAnswer = (selectedCapital: string) => {\n    if (!currentCountry || selectedAnswer !== null) return;\n    \n    setSelectedAnswer(selectedCapital);\n    const isCorrect = selectedCapital === currentCountry.capital;\n    setFeedback(isCorrect ? 'Correct! ðŸŽ‰' : `Wrong! The capital is ${currentCountry.capital}`);\n    \n    if (isCorrect) {\n      setScore(prev => prev + 1);\n    }\n    \n    setTotalQuestions(prev => prev + 1);\n    \n    if (totalQuestions + 1 >= 10) {\n      setTimeout(() => setGameOver(true), 1500);\n    } else {\n      setTimeout(startNewQuestion, 1500);\n    }\n  };\n\n  const resetGame = () => {\n    setScore(0);\n    setTotalQuestions(0);\n    setGameOver(false);\n    startNewQuestion();\n  };\n\n  useEffect(() => {\n    startNewQuestion();\n  }, []);\n\n  if (gameOver) {\n    return (\n      <div className=\"quiz-container\">\n        <h2>Game Over!</h2>\n        <p>Your final score: {score} out of {totalQuestions}</p>\n        <button onClick={resetGame} className=\"reset-button\">\n          Play Again\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"quiz-container\">\n      <h1>Asian Capitals Quiz</h1>\n      <div className=\"score-display\">\n        Score: {score} / {totalQuestions}\n      </div>\n      {currentCountry && (\n        <div className=\"question-container\">\n          <h2>What is the capital of {currentCountry.name}?</h2>\n          <div className=\"options-container\">\n            {options.map((capital, index) => (\n              <button\n                key={index}\n                onClick={() => handleAnswer(capital)}\n                className={`option-button ${\n                  selectedAnswer === capital\n                    ? capital === currentCountry.capital\n                      ? 'correct'\n                      : 'incorrect'\n                    : ''\n                }`}\n                disabled={selectedAnswer !== null}\n              >\n                {capital}\n              </button>\n            ))}\n          </div>\n          {feedback && (\n            <p className={`feedback ${feedback.includes('Correct') ? 'correct' : 'incorrect'}`}>\n              {feedback}\n            </p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Quiz; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}