{"ast":null,"code":"var _jsxFileName = \"/Users/steffen/projects/geoguess/src/components/Quiz.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { asianCountries } from '../data/countries';\nimport './Quiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const [currentCountry, setCurrentCountry] = useState(null);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [score, setScore] = useState(0);\n  const [totalQuestions, setTotalQuestions] = useState(0);\n  const [feedback, setFeedback] = useState('');\n  const [gameOver, setGameOver] = useState(false);\n  const getRandomCountry = () => {\n    const randomIndex = Math.floor(Math.random() * asianCountries.length);\n    return asianCountries[randomIndex];\n  };\n  const startNewQuestion = () => {\n    setCurrentCountry(getRandomCountry());\n    setUserAnswer('');\n    setFeedback('');\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!currentCountry) return;\n    const isCorrect = userAnswer.trim().toLowerCase() === currentCountry.capital.toLowerCase();\n    setFeedback(isCorrect ? 'Correct! ðŸŽ‰' : `Wrong! The capital is ${currentCountry.capital}`);\n    if (isCorrect) {\n      setScore(prev => prev + 1);\n    }\n    setTotalQuestions(prev => prev + 1);\n    if (totalQuestions + 1 >= 10) {\n      setGameOver(true);\n    } else {\n      setTimeout(startNewQuestion, 1500);\n    }\n  };\n  const resetGame = () => {\n    setScore(0);\n    setTotalQuestions(0);\n    setGameOver(false);\n    startNewQuestion();\n  };\n  useEffect(() => {\n    startNewQuestion();\n  }, []);\n  if (gameOver) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your final score: \", score, \" out of \", totalQuestions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        className: \"reset-button\",\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Asian Capitals Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-display\",\n      children: [\"Score: \", score, \" / \", totalQuestions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), currentCountry && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"What is the capital of \", currentCountry.name, \"?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userAnswer,\n          onChange: e => setUserAnswer(e.target.value),\n          placeholder: \"Enter the capital city\",\n          className: \"answer-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), feedback && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `feedback ${feedback.includes('Correct') ? 'correct' : 'incorrect'}`,\n        children: feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"Cqjj0h2U4URk95BONIcW9nI4Qg4=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","asianCountries","jsxDEV","_jsxDEV","Quiz","_s","currentCountry","setCurrentCountry","userAnswer","setUserAnswer","score","setScore","totalQuestions","setTotalQuestions","feedback","setFeedback","gameOver","setGameOver","getRandomCountry","randomIndex","Math","floor","random","length","startNewQuestion","handleSubmit","e","preventDefault","isCorrect","trim","toLowerCase","capital","prev","setTimeout","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","onSubmit","type","value","onChange","target","placeholder","includes","_c","$RefreshReg$"],"sources":["/Users/steffen/projects/geoguess/src/components/Quiz.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Country, asianCountries } from '../data/countries';\nimport './Quiz.css';\n\nconst Quiz: React.FC = () => {\n  const [currentCountry, setCurrentCountry] = useState<Country | null>(null);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [score, setScore] = useState(0);\n  const [totalQuestions, setTotalQuestions] = useState(0);\n  const [feedback, setFeedback] = useState('');\n  const [gameOver, setGameOver] = useState(false);\n\n  const getRandomCountry = () => {\n    const randomIndex = Math.floor(Math.random() * asianCountries.length);\n    return asianCountries[randomIndex];\n  };\n\n  const startNewQuestion = () => {\n    setCurrentCountry(getRandomCountry());\n    setUserAnswer('');\n    setFeedback('');\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!currentCountry) return;\n\n    const isCorrect = userAnswer.trim().toLowerCase() === currentCountry.capital.toLowerCase();\n    setFeedback(isCorrect ? 'Correct! ðŸŽ‰' : `Wrong! The capital is ${currentCountry.capital}`);\n    \n    if (isCorrect) {\n      setScore(prev => prev + 1);\n    }\n    \n    setTotalQuestions(prev => prev + 1);\n    \n    if (totalQuestions + 1 >= 10) {\n      setGameOver(true);\n    } else {\n      setTimeout(startNewQuestion, 1500);\n    }\n  };\n\n  const resetGame = () => {\n    setScore(0);\n    setTotalQuestions(0);\n    setGameOver(false);\n    startNewQuestion();\n  };\n\n  useEffect(() => {\n    startNewQuestion();\n  }, []);\n\n  if (gameOver) {\n    return (\n      <div className=\"quiz-container\">\n        <h2>Game Over!</h2>\n        <p>Your final score: {score} out of {totalQuestions}</p>\n        <button onClick={resetGame} className=\"reset-button\">\n          Play Again\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"quiz-container\">\n      <h1>Asian Capitals Quiz</h1>\n      <div className=\"score-display\">\n        Score: {score} / {totalQuestions}\n      </div>\n      {currentCountry && (\n        <div className=\"question-container\">\n          <h2>What is the capital of {currentCountry.name}?</h2>\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"text\"\n              value={userAnswer}\n              onChange={(e) => setUserAnswer(e.target.value)}\n              placeholder=\"Enter the capital city\"\n              className=\"answer-input\"\n            />\n            <button type=\"submit\" className=\"submit-button\">\n              Submit\n            </button>\n          </form>\n          {feedback && <p className={`feedback ${feedback.includes('Correct') ? 'correct' : 'incorrect'}`}>\n            {feedback}\n          </p>}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Quiz; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}